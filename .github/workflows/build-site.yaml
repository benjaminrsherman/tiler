name: Build Web Game

on: push

env:
  GODOT_VERSION: 3.5.1
  RUST_VERSION: nightly-2022-09-02
  EMSDK_VERSION: 3.1.21

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-rust:
    runs-on: ubuntu-latest
    container:
      image: rustlang/rust:nightly-bullseye

    steps:
      - uses: actions/checkout@v3
        with:
          path: repo/

      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/git/db/
            repo/game-gdnative/target/
          key: ${{ runner.os }}-${{ env.RUST_VERSION }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache EMSDK
        uses: actions/cache@v3
        id: cache-emsdk
        with:
          path: |
            emsdk/
          key: ${{ runner.os }}-emsdk-${{ env.EMSDK_VERSION }}

      - name: Checkout EMSDK
        if: steps.cache-emsdk.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: emscripten-core/emsdk
          path: emsdk/

      - name: Install EMSDK
        if: steps.cache-emsdk.outputs.cache-hit != 'true'
        run: emsdk/emsdk install ${EMSDK_VERSION}

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y lsb-release software-properties-common gnupg gcc-multilib
          bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          rustup install ${RUST_VERSION}
          rustup target add wasm32-unknown-emscripten

      - name: Build Rust package
        shell: bash
        run: |
          set -x
          emsdk/emsdk activate ${EMSDK_VERSION}
          source emsdk/emsdk_env.sh
          cd repo/game-gdnative
          cargo +nightly build --target=wasm32-unknown-emscripten --release

      - uses: actions/upload-artifact@v3
        with:
          name: rust-wasm
          path: repo/game-gdnative/target/wasm32-unknown-emscripten/release/game_gdnative.wasm
          if-no-files-found: error

  build-game:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.5.1
    needs: build-rust

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Download Rust Build
        uses: actions/download-artifact@v3
        with:
          name: rust-wasm
          path: game-godot

      - name: Setup templates
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable

      - name: Build Site
        run: |
          set -x
          mkdir -v -p build/web
          cd game-godot
          godot -v --export HTML5 ../build/web/index.html

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload Site
        uses: actions/upload-pages-artifact@v1
        with:
          path: build/web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
